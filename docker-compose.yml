version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: kt-hackathon-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: kt_hackathon
      MYSQL_USER: hackathon_user
      MYSQL_PASSWORD: hackathon_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql # 데이터를 하드디스크에 저장
      - ./backend/src/main/resources/db/schema.sql:/docker-entrypoint-initdb.d/init.sql # 초기 데이터베이스 초기화
    networks:
      - hackathon-network # 다른 컨테이너들과의 네트워크 연결용
    command: --default-authentication-plugin=mysql_native_password # MySQL 8.0 인증 플러그인 설정

  # Redis (for caching)
  redis:
    image: redis:7-alpine
    container_name: kt-hackathon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hackathon-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kt-hackathon-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:mysql://mysql:3306/kt_hackathon
      DATABASE_USERNAME: hackathon_user
      DATABASE_PASSWORD: hackathon_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - hackathon-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kt-hackathon-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:8080
      VITE_LLM_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - hackathon-network

  # LLM Service
  llm:
    build:
      context: ./llm
      dockerfile: Dockerfile
    container_name: kt-hackathon-llm
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      BACKEND_API_URL: http://backend:8080
    ports:
      - "8000:8000"
    depends_on:
      - backend
    volumes:
      - ./llm/data:/app/data
    networks:
      - hackathon-network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: kt-hackathon-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - llm
    networks:
      - hackathon-network

volumes:
  mysql_data:
  redis_data:

networks:
  hackathon-network:
    driver: bridge
